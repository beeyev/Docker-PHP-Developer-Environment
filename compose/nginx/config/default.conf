# Configuration File - Nginx Server Configs
# http://nginx.org/en/docs/dirindex.html

server {
    listen 80;
    server_name _ app1.test;
    root /var/www/app1/public/;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # This block will catch static file requests, such as images, css, js
    # The ?: prefix is a 'non-capturing' mark, meaning we do not require
    # the pattern to be captured into $1 which should help improve performance
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff|woff2|ttf|html)$ {
        # Some basic cache-control for static files to be sent to the browser
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}


# EXAMPLE OF THE SECOND SERVICE
# According to the example above, the service will be accessable using address http://localhost:82/
# don't forget to add new port mapping in docker-compose.yml file inside `nginx` section

#server {
#    listen 82;
#    server_name app2.test;
#    root /var/www/app2/public/;
#
#    location = /favicon.ico { access_log off; log_not_found off; }
#    location = /robots.txt  { access_log off; log_not_found off; }
#
#    location / {
#        try_files $uri $uri/ /index.php?$query_string;
#    }
#
#    # This block will catch static file requests, such as images, css, js
#    # The ?: prefix is a 'non-capturing' mark, meaning we do not require
#    # the pattern to be captured into $1 which should help improve performance
#    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff|woff2|ttf|html)$ {
#        # Some basic cache-control for static files to be sent to the browser
#        add_header Pragma public;
#        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
#    }
#
#    location ~ \.php$ {
#        try_files $uri =404;
#        fastcgi_split_path_info ^(.+\.php)(/.+)$;
#        fastcgi_pass php:9000;
#        fastcgi_index index.php;
#        include fastcgi_params;
#        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#        fastcgi_param PATH_INFO $fastcgi_path_info;
#    }
#}